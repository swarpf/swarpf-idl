syntax = "proto3";

package proxyapi;

import "google/protobuf/empty.proto";

// option go_package = "github.com/lyrex/swarpf/pkg/proxyapi";
option go_package = "proxyapi;proxyapi";

service ProxyApi {
    rpc Register (ProxyApiOptions) returns (ProxyApiProviderResponse) {
    }
    rpc Disconnect (ProxyApiOptions) returns (ProxyApiProviderResponse) {
    }

    // TODO(lyrex): maybe refactor this in something like rpc ListenTo(string[] Commands) returns (stream ApiEvent) { }
}

service ProxyApiConsumer {
    rpc OnReceiveApiEvent (ApiEvent) returns (google.protobuf.Empty) {
    }
}

message ProxyApiOptions {
    string Address = 1;
    repeated string Commands = 2;
}

message ProxyApiProviderResponse {
    bool Success = 1;
    string Error = 16;
}

message ApiEvent {
    string Command = 1;
    string Request = 2;
    string Response = 3;
}
